/** errorDef.h**  Created on: 2017-07-31*      Author: Gong Hui*/#ifndef ERRORDEFINE_H_#define ERRORDEFINE_H_#include "portab.h"/**************************** General MACRO Definition ***********************/const uchar MAX_ADDI_INFO_SIZE = 13;/* warning - logged only - not shown at UI  will be logged as [w] */const SREnum eventErrorWarning = 1;/* error - shown at UI  with a message box + exclamation mark and OK-Button*//* will be  logged as [r] */const SREnum eventErrorRError  = 2;/* fatal error - shown on UI with a messagebox  + white x on red background   and OK-Button *//* will be    logged as [f]  */const SREnum eventErrorFatalError = 3;/* info for user - shown at UI with a messagebox + blue i on white background and OK-Button *//* not treated as an error, less prior  than errors in case of concurrent errors  *//* will be logged as [i] */const SREnum eventErrorUserInfo   = 5;/* an user information but can disapear automatically, similar to eventErrorUserInfo*/const SREnum eventErrorSmartInfo  = 9;const SREnum eventErrorRstWarning = 0x11;const SREnum eventErrorRstRError  = 0x12;const SREnum eventErrorRstFatalError = 0x13;const SREnum eventErrorRstUserInfo   = 0x15;/********************* Error category Enum Type ******************************/const enum16 eventErrorMonotorBase  = 0x0100;const enum16 eventErrorMCUBase      = 0x0300;const enum16 eventErrorSafeGuard    = 0x0800; // Safe Guardconst enum16 eventErrorMotDrive     = 0x1000;const enum16 eventErrorSCBase       = 0x1000;const enum16 eventErrorRRBase       = 0x3000;const enum16 eventErrorSysCtrlBase  = 0x5000;const enum16 eventErrorUIDevBase    = 0x6000;//include HMI, 3D Virtual Simulationconst enum16 eventErrorNDIBase      = 0x7000;const enum16 eventErrorOtherBase    = 0x8000;//include Service/**************************Global Method****************************************/void ReportError(const enum16 errorNumber, const SREnum category, const char addtionalInfo[MAX_ADDI_INFO_SIZE], const uchar additionalErrorLen = MAX_ADDI_INFO_SIZE, const uchar SRNodeID = 0);#endif /* ERRORDEFINE_H_ */